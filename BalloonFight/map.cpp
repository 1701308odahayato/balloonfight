
#include "DxLib.h"
#include "map.h"

int mapData[30][32] = {
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},

	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, 24,25,26,25,26,25, 26,27,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},

	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,24, 25,27,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, 24,25,27,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},

	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,24,25,27, -1,-1,-1,-1,-1,-1, -1,-1,24,25,27,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},

	{ -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1},
	{ 14,13,14,13,14,13, 14,15,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, 12,13,14,13,14,13, 14,13},
	{ 18,17,18,17,18,17, 18,19,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, 16,17,18,17,18,17, 18,17},
	{ 22,21,22,21,22,21, 22,21,8,9,10,11, 8,9,10,11,8,9, 10,11,8,9,10,11, 20,21,22,21,22,21, 22,21},
	{ 1,1,1,1,1,1, 1,1,4,5,6,7, 4,5,6,7,4,5, 6,7,4,5,6,7, 1,1,1,1,1,1, 1,3},
	{ 4,5,6,7,4,5, 6,7,4,5,6,7, 4,5,6,7,4,5, 6,7,4,5,6,7, 4,5,6,7,4,5, 6,7},

};

int imgMap[40];

void MapSystemInit()
{
	int tmp = LoadGraph("image/mapImage.png");

	// êÖñ 1
	imgMap[0] = DerivationGraph(64 + 16 * 0, 48, 16, 16, tmp);
	imgMap[1] = DerivationGraph(64 + 16 * 1, 48, 16, 16, tmp);
	imgMap[2] = DerivationGraph(64 + 16 * 2, 48, 16, 16, tmp);
	imgMap[3] = DerivationGraph(64 + 16 * 3, 48, 16, 16, tmp);

	// êÖñ 2
	imgMap[4] = DerivationGraph(64 + 16 * 0, 64, 16, 16, tmp);
	imgMap[5] = DerivationGraph(64 + 16 * 1, 64, 16, 16, tmp);
	imgMap[6] = DerivationGraph(64 + 16 * 2, 64, 16, 16, tmp);
	imgMap[7] = DerivationGraph(64 + 16 * 3, 64, 16, 16, tmp);

	// êÖñ 3
	imgMap[8] = DerivationGraph(64 + 16 * 0, 80, 16, 16, tmp);
	imgMap[9] = DerivationGraph(64 + 16 * 1, 80, 16, 16, tmp);
	imgMap[10] = DerivationGraph(64 + 16 * 2, 80, 16, 16, tmp);
	imgMap[11] = DerivationGraph(64 + 16 * 3, 80, 16, 16, tmp);

	// ìá1
	imgMap[12] = DerivationGraph(64 + 16 * 0, 0, 16, 16, tmp);
	imgMap[13] = DerivationGraph(64 + 16 * 1, 0, 16, 16, tmp);
	imgMap[14] = DerivationGraph(64 + 16 * 2, 0, 16, 16, tmp);
	imgMap[15] = DerivationGraph(64 + 16 * 3, 0, 16, 16, tmp);

	// ìá2
	imgMap[16] = DerivationGraph(64 + 16 * 0, 16, 16, 16, tmp);
	imgMap[17] = DerivationGraph(64 + 16 * 1, 16, 16, 16, tmp);
	imgMap[18] = DerivationGraph(64 + 16 * 2, 16, 16, 16, tmp);
	imgMap[19] = DerivationGraph(64 + 16 * 3, 16, 16, 16, tmp);

	// ìá3
	imgMap[20] = DerivationGraph(64 + 16 * 0, 32, 16, 16, tmp);
	imgMap[21] = DerivationGraph(64 + 16 * 1, 32, 16, 16, tmp);
	imgMap[22] = DerivationGraph(64 + 16 * 2, 32, 16, 16, tmp);
	imgMap[23] = DerivationGraph(64 + 16 * 3, 32, 16, 16, tmp);

	// ïÇìá
	imgMap[24] = DerivationGraph(64 + 16 * 4, 0, 16, 16, tmp);
	imgMap[25] = DerivationGraph(64 + 16 * 5, 0, 16, 16, tmp);
	imgMap[26] = DerivationGraph(64 + 16 * 6, 0, 16, 16, tmp);
	imgMap[27] = DerivationGraph(64 + 16 * 7, 0, 16, 16, tmp);

	// ìæì_¥ÿ±
	imgMap[28] = DerivationGraph(64 + 16 * -4, 48, 16, 16, tmp);
	imgMap[29] = DerivationGraph(64 + 16 * -3, 48, 16, 16, tmp);
	imgMap[30] = DerivationGraph(64 + 16 * -2, 48, 16, 16, tmp);
	imgMap[31] = DerivationGraph(64 + 16 * -1, 48, 16, 16, tmp);
	imgMap[32] = DerivationGraph(64 + 16 * -4, 64, 16, 16, tmp);
	imgMap[33] = DerivationGraph(64 + 16 * -3, 64, 16, 16, tmp);
	imgMap[34] = DerivationGraph(64 + 16 * -2, 64, 16, 16, tmp);
	imgMap[35] = DerivationGraph(64 + 16 * -1, 64, 16, 16, tmp);
	imgMap[36] = DerivationGraph(64 + 16 * -4, 80, 16, 16, tmp);
	imgMap[37] = DerivationGraph(64 + 16 * -3, 80, 16, 16, tmp);
	imgMap[38] = DerivationGraph(64 + 16 * -2, 80, 16, 16, tmp);
	imgMap[39] = DerivationGraph(64 + 16 * -1, 80, 16, 16, tmp);
}

void MapDraw()
{
	for (int y = 0; y < 30; y++) {
		for (int x = 0; x < 32; x++) {
			if (mapData[y][x] >= 0) {
				DrawGraph(x * 16, y * 16, imgMap[mapData[y][x]], true);
			}
		}
	}
}